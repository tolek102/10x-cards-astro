openapi: 3.0.3
info:
  title: 10x Cards API
  description: API for flashcard generation and management
  version: 1.0.0

servers:
  - url: /api
    description: API base path

paths:
  /flashcards:
    get:
      summary: List accepted flashcards
      description: |
        Returns a paginated list of accepted flashcards (candidate=false) for the authenticated user.
        Results can be sorted by creation date in ascending or descending order.
      operationId: listAcceptedFlashcards
      tags:
        - Flashcards
      parameters:
        - name: page
          in: query
          required: false
          description: Page number for pagination (defaults to 1)
          schema:
            $ref: '#/components/schemas/PaginationPage'
        - name: limit
          in: query
          required: false
          description: Number of items per page (defaults to 20, maximum 100)
          schema:
            $ref: '#/components/schemas/PaginationLimit'
        - name: sort
          in: query
          required: false
          description: Sorting order for flashcards
          schema:
            $ref: '#/components/schemas/SortOrder'
      responses:
        '200':
          description: Successfully retrieved flashcards
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlashcardsListResponse'
        '400':
          description: Invalid query parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    post:
      summary: Create a manual flashcard
      description: |
        Creates a single flashcard manually. The created flashcard is automatically
        marked as verified (candidate=false) and has source set to "MANUAL".
      operationId: createManualFlashcard
      tags:
        - Flashcards
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateManualFlashcardCommand'
      responses:
        '201':
          description: Successfully created flashcard
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlashcardDto'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /flashcards/candidates:
    get:
      summary: List candidate flashcards
      description: |
        Returns a paginated list of candidate flashcards (candidate=true) for the authenticated user.
        These are typically AI-generated flashcards pending user review.
        Results can be sorted by creation date in ascending or descending order.
      operationId: listCandidateFlashcards
      tags:
        - Flashcards
      parameters:
        - name: page
          in: query
          required: false
          description: Page number for pagination (defaults to 1)
          schema:
            $ref: '#/components/schemas/PaginationPage'
        - name: limit
          in: query
          required: false
          description: Number of items per page (defaults to 20, maximum 100)
          schema:
            $ref: '#/components/schemas/PaginationLimit'
        - name: sort
          in: query
          required: false
          description: Sorting order for flashcards
          schema:
            $ref: '#/components/schemas/SortOrder'
      responses:
        '200':
          description: Successfully retrieved candidate flashcards
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlashcardsListResponse'
        '400':
          description: Invalid query parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /flashcards/generate:
    post:
      summary: Generate flashcards from text using AI
      description: |
        Takes a long text input and generates a set of flashcards using AI processing.
        The generated flashcards are stored in the database and marked as candidates
        for user review.
      operationId: generateFlashcards
      tags:
        - Flashcards
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateFlashcardsCommand'
      responses:
        '200':
          description: Successfully generated flashcards
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneratedFlashcardsResponse'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /flashcards/{id}:
    get:
      summary: Get flashcard by ID
      description: |
        Retrieves details of a specific flashcard by its ID.
        Only returns flashcards that belong to the authenticated user.
      operationId: getFlashcardById
      tags:
        - Flashcards
      parameters:
        - name: id
          in: path
          required: true
          description: Unique identifier of the flashcard
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved flashcard
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlashcardDto'
        '400':
          description: Invalid flashcard ID format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Flashcard not found or belongs to another user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    put:
      summary: Update flashcard by ID
      description: |
        Updates an existing flashcard. If the flashcard was a candidate (candidate=true),
        it will be automatically accepted (candidate set to false).
        If the source was "AI", it will be changed to "AI_EDITED" upon update.
        Only updates flashcards that belong to the authenticated user.
      operationId: updateFlashcard
      tags:
        - Flashcards
      parameters:
        - name: id
          in: path
          required: true
          description: Unique identifier of the flashcard
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFlashcardCommand'
      responses:
        '200':
          description: Successfully updated flashcard
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlashcardDto'
        '400':
          description: Invalid flashcard ID format or invalid input data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Flashcard not found or belongs to another user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    GenerateFlashcardsCommand:
      type: object
      required:
        - text
      properties:
        text:
          type: string
          description: The text content to generate flashcards from
          minLength: 1000
          maxLength: 10000
          example: "A long text about a specific topic that will be used to generate flashcards..."

    FlashcardDto:
      type: object
      required:
        - id
        - front
        - back
        - source
        - candidate
        - created_at
        - updated_at
      properties:
        id:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174000"
        front:
          type: string
          description: The question or front side of the flashcard
          example: "What is the capital of France?"
        back:
          type: string
          description: The answer or back side of the flashcard
          example: "Paris"
        source:
          type: string
          enum: [MANUAL, AI, AI_EDITED]
          description: The source of the flashcard
          example: "AI"
        candidate:
          type: boolean
          description: Whether this is a candidate flashcard pending user review
          example: true
        created_at:
          type: string
          format: date-time
          example: "2024-02-20T12:00:00Z"
        updated_at:
          type: string
          format: date-time
          example: "2024-02-20T12:00:00Z"

    GeneratedFlashcardsResponse:
      type: array
      items:
        $ref: '#/components/schemas/FlashcardDto'
      description: List of generated flashcards

    ErrorResponse:
      type: object
      required:
        - error
      properties:
        error:
          type: string
          description: Error message
          example: "Validation failed"
        details:
          type: array
          items:
            type: object
            properties:
              code:
                type: string
                example: "invalid_string"
              message:
                type: string
                example: "Text must be at least 1000 characters long"
              path:
                type: array
                items:
                  type: string
                example: ["text"]
          description: Detailed error information (optional)
        message:
          type: string
          description: Additional error context (optional)
          example: "Failed to process the request"

    CreateManualFlashcardCommand:
      type: object
      required:
        - front
        - back
        - source
        - candidate
      properties:
        front:
          type: string
          description: The question or front side of the flashcard
          minLength: 1
          maxLength: 200
          example: "What is the capital of France?"
        back:
          type: string
          description: The answer or back side of the flashcard
          minLength: 1
          maxLength: 500
          example: "Paris"
        source:
          type: string
          enum: ["MANUAL"]
          description: The source of the flashcard (must be "MANUAL")
          example: "MANUAL"
        candidate:
          type: boolean
          enum: [false]
          description: Whether this is a candidate flashcard (must be false)
          example: false

    FlashcardsListResponse:
      type: object
      required:
        - data
        - pagination
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/FlashcardDto'
          description: List of flashcards for the current page
        pagination:
          type: object
          required:
            - page
            - limit
            - total
          properties:
            page:
              type: integer
              description: Current page number
              example: 1
            limit:
              type: integer
              description: Number of items per page
              example: 20
            total:
              type: integer
              description: Total number of items across all pages
              example: 42

    PaginationPage:
      type: integer
      minimum: 1
      default: 1

    PaginationLimit:
      type: integer
      minimum: 1
      maximum: 100
      default: 20

    SortOrder:
      type: string
      enum:
        - created_at_desc
        - created_at_asc
      default: created_at_desc

    UpdateFlashcardCommand:
      type: object
      properties:
        front:
          type: string
          description: The question or front side of the flashcard
          minLength: 1
          maxLength: 200
          example: "What is the capital of France?"
        back:
          type: string
          description: The answer or back side of the flashcard
          minLength: 1
          maxLength: 500
          example: "Paris"
        candidate:
          type: boolean
          description: Whether this is a candidate flashcard (setting to false accepts the flashcard)
          default: false
          example: false
      minProperties: 1
      description: At least one field must be provided for update 