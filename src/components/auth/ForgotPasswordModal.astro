---
interface Props {
  isVisible: boolean;
}

const { isVisible } = Astro.props;
---

<div
  id="forgot-password-modal"
  class:list={["fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50", { hidden: !isVisible }]}
>
  <div class="bg-white rounded-lg p-8 max-w-md w-full mx-4">
    <div class="flex justify-between items-center mb-6">
      <h2 class="text-2xl font-bold">Reset Password</h2>
      <button id="close-forgot-modal" class="text-gray-500 hover:text-gray-700">
        <i class="fas fa-times"></i>
      </button>
    </div>

    <form id="forgot-password-form" class="space-y-4">
      <div>
        <label for="forgot-email" class="block text-sm font-medium text-gray-700">Email</label>
        <input
          type="email"
          id="forgot-email"
          name="email"
          required
          class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500"
        />
      </div>

      <div class="flex items-center justify-end">
        <button type="button" id="show-login-from-forgot" class="text-sm text-indigo-600 hover:text-indigo-500"
          >Back to Login</button
        >
      </div>

      <button
        type="submit"
        class="w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
        >Send Reset Link</button
      >
    </form>
  </div>
</div>

<script>
  import { showNotification } from "../../lib/utils/notifications";
  import { resetPassword } from "../../lib/services/authService";

  const forgotForm = document.getElementById("forgot-password-form") as HTMLFormElement;
  const forgotModal = document.getElementById("forgot-password-modal");
  const closeForgotModal = document.getElementById("close-forgot-modal");
  const showLoginFromForgot = document.getElementById("show-login-from-forgot");

  if (forgotForm && forgotModal && closeForgotModal && showLoginFromForgot) {
    forgotForm.addEventListener("submit", async (e) => {
      e.preventDefault();
      const formData = new FormData(forgotForm);
      const email = formData.get("email") as string;

      try {
        await resetPassword(email);
        showNotification("Password reset link sent to your email", "success");
        forgotModal.classList.add("hidden");
      } catch (error) {
        showNotification(error instanceof Error ? error.message : "Failed to send reset link", "error");
      }
    });

    closeForgotModal.addEventListener("click", () => {
      forgotModal.classList.add("hidden");
    });

    showLoginFromForgot.addEventListener("click", () => {
      forgotModal.classList.add("hidden");
      window.dispatchEvent(
        new CustomEvent("modal:show", {
          detail: { modal: "login" },
        })
      );
    });
  }
</script>
