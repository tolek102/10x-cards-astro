---
import type { LoginUserCommand } from "../../types";

interface Props {
  isVisible: boolean;
}

const { isVisible } = Astro.props;
---

<div
  id="login-modal"
  class:list={["fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50", { hidden: !isVisible }]}
>
  <div class="bg-white rounded-lg p-8 max-w-md w-full mx-4">
    <div class="flex justify-between items-center mb-6">
      <h2 class="text-2xl font-bold">Login</h2>
      <button id="close-login-modal" class="text-gray-500 hover:text-gray-700">
        <i class="fas fa-times"></i>
      </button>
    </div>

    <form id="login-form" class="space-y-4">
      <div>
        <label for="login-email" class="block text-sm font-medium text-gray-700">Email</label>
        <input
          type="email"
          id="login-email"
          name="email"
          required
          class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500"
        />
      </div>

      <div class="relative">
        <label for="login-password" class="block text-sm font-medium text-gray-700">Password</label>
        <div class="relative">
          <input
            type="password"
            id="login-password"
            name="password"
            required
            class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500"
          />
          <button
            type="button"
            onclick="togglePassword('login-password')"
            class="absolute inset-y-0 right-0 flex items-center pr-3 mt-1"
          >
            <i class="fas fa-eye text-gray-400 hover:text-gray-600"></i>
          </button>
        </div>
      </div>

      <div class="flex items-center justify-between">
        <button type="button" id="forgot-password-btn" class="text-sm text-indigo-600 hover:text-indigo-500"
          >Forgot password?</button
        >
        <button type="button" id="show-register-from-login" class="text-sm text-indigo-600 hover:text-indigo-500"
          >Create account</button
        >
      </div>

      <button
        type="submit"
        class="w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
        >Login</button
      >
    </form>
  </div>
</div>

<script>
  import { showNotification } from "../../lib/utils/notifications";
  import { login } from "../../lib/services/authService";

  const loginForm = document.getElementById("login-form") as HTMLFormElement;
  const loginModal = document.getElementById("login-modal");
  const closeLoginModal = document.getElementById("close-login-modal");

  if (loginForm && loginModal && closeLoginModal) {
    loginForm.addEventListener("submit", async (e) => {
      e.preventDefault();
      const formData = new FormData(loginForm);

      const loginData: LoginUserCommand = {
        email: formData.get("email") as string,
        password: formData.get("password") as string,
      };

      try {
        const response = await login(loginData);
        showNotification("Login successful!", "success");
        loginModal.classList.add("hidden");
        // Dispatch event to update UI
        window.dispatchEvent(new CustomEvent("auth:login", { detail: response }));
      } catch (error) {
        showNotification(error instanceof Error ? error.message : "Login failed", "error");
      }
    });

    closeLoginModal.addEventListener("click", () => {
      loginModal.classList.add("hidden");
    });
  }
</script>
