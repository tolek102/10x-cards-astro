---
import BaseLayout from '../../layouts/BaseLayout.astro';
---

<BaseLayout title="Logowanie - 10x Cards">
  <div class="min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8">
    <div class="max-w-md w-full space-y-8">
      <div>
        <h2 class="mt-6 text-center text-3xl font-extrabold text-gray-900">
          Zaloguj się do swojego konta
        </h2>
        <p class="mt-2 text-center text-sm text-gray-600">
          Lub{" "}
          <a href="/auth/register" class="font-medium text-indigo-600 hover:text-indigo-500">
            zarejestruj się za darmo
          </a>
        </p>
      </div>

      <form id="loginForm" class="mt-8 space-y-6">
        <input type="hidden" name="remember" value="true" />
        <div class="rounded-md shadow-sm -space-y-px">
          <div>
            <label for="email" class="sr-only">Email</label>
            <input
              id="email"
              name="email"
              type="email"
              required
              class="appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm"
              placeholder="Adres email"
            />
          </div>
          <div>
            <label for="password" class="sr-only">Hasło</label>
            <input
              id="password"
              name="password"
              type="password"
              required
              class="appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm"
              placeholder="Hasło"
            />
          </div>
        </div>

        <div class="flex items-center justify-between">
          <div class="text-sm">
            <a href="/auth/reset-password" class="font-medium text-indigo-600 hover:text-indigo-500">
              Zapomniałeś hasła?
            </a>
          </div>
        </div>

        <div>
          <button
            type="submit"
            class="group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
          >
            Zaloguj się
          </button>
        </div>
      </form>
    </div>
  </div>
</BaseLayout>

<script>
  import { showToast } from '../../lib/toast';

  // Funkcja do wyświetlania toastów
  const displayToast = (message: string, type: 'success' | 'error' = 'error') => {
    // Upewnij się, że toast nie jest pusty
    if (message && message.trim()) {
      showToast(message, type);
    }
  };

  // Sprawdź parametry URL przy załadowaniu strony
  document.addEventListener('DOMContentLoaded', () => {
    const urlParams = new URLSearchParams(window.location.search);
    const error = urlParams.get('error');
    const registered = urlParams.get('registered');

    if (error) {
      displayToast(error);
    }
    if (registered) {
      displayToast('Konto zostało utworzone. Możesz się teraz zalogować.', 'success');
      console.log('Konto zostało utworzone. Możesz się teraz zalogować.');
    }
  });

  // Obsługa formularza logowania
  document.getElementById('loginForm')?.addEventListener('submit', async (e) => {
    e.preventDefault();
    
    const form = e.target as HTMLFormElement;
    const formData = new FormData(form);
    
    try {
      const response = await fetch('/api/auth/login', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          email: formData.get('email'),
          password: formData.get('password'),
        }),
      });

      const data = await response.json();

      if (!response.ok) {
        let errorMessage = data.error || 'Wystąpił błąd podczas logowania';
        // Mapowanie komunikatów błędów z Supabase na przyjazne dla użytkownika
        if (errorMessage.includes('Invalid login credentials')) {
          errorMessage = 'Nieprawidłowe dane logowania';
        }
        displayToast(errorMessage);
        return;
      }

      displayToast('Zalogowano pomyślnie', 'success');
      
      // Poczekaj chwilę, aby toast był widoczny
      await new Promise(resolve => setTimeout(resolve, 1000));

      window.location.href = '/creator';
    } catch (error) {
      displayToast(
        error instanceof Error ? error.message : 'Wystąpił nieoczekiwany błąd'
      );
    }
  });
</script> 